{"version":3,"sources":["styles/theme.js","components/header/Nav.js","components/common/container/Container.js","components/common/text/Text.js","components/header/Header.js","components/common/col/Col.js","components/common/row/Row.js","utils/date.js","components/main/board/Forecast.js","utils/http.js","utils/api_key.js","redux/weather/weatherApi.js","redux/weather/weatherSlice.js","components/main/board/Head.js","components/main/search/useSearch.js","components/main/search/Search.js","components/common/Spinner/Spinner.js","components/main/Main.js","components/favorites/Favorites.js","components/common/alert/Alert.js","App.js","redux/store.js","serviceWorker.js","index.js","components/header/header.module.scss"],"names":["lightTheme","body","fontColor","darkTheme","inputColor","GlobalStyles","createGlobalStyle","props","theme","Nav","className","styles","ul","link","to","SContainer","styled","div","dir","maxWidth","justify","alignItems","padding","margin","height","border","borderBottom","radius","wrap","overflow","Container","SText","p","size","color","weight","Text","children","Header","setTheme","Switch","onChange","cur","name","style","SCol","flex","width","Col","SRow","Row","date","isFulldate","moment","format","isDay","Forecast","current","forecast","length","map","f","src","Day","Icon","alt","IconPhrase","Date","Temperature","Minimum","Value","Unit","Maximum","uuidv4","React","memo","http","url","data","a","axios","method","API_KEY","getLocationApi","createAsyncThunk","value","rejectWithValue","message","getWeatherApi","location","Key","weather","getForecastApi","DailyForecasts","getCurrentByGeoLocation","lat","lng","dispatch","weatherSlice","createSlice","initialState","places","favorites","loading","error","reducers","handleFavorite","state","payload","some","fav","filter","favorite","push","id","locationName","LocalizedName","changeCurrent","extraReducers","pending","fulfilled","rejected","actions","Head","useDispatch","existInFavorite","IsDayTime","LocalObservationDateTime","WeatherText","Metric","Imperial","IconButton","onClick","cursor","useSearch","useSelector","handleChange","e","target","handleSelected","place","withTheme","Autocomplete","options","getOptionLabel","option","getOptionSelected","Version","event","renderInput","params","TextField","label","variant","background","InputProps","endAdornment","Fragment","CircularProgress","Spinner","type","Main","alignSelf","Object","keys","Favorites","history","useHistory","handleClick","WeatherIcon","useStyles","makeStyles","root","position","bottom","left","transform","SimpleAlerts","classes","useState","visible","setVisible","useEffect","timeout","fn","setTimeout","clearTimeout","opacity","transition","Alert","severity","StyledApp","App","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","tlvDefaultLocation","AdministrativeArea","ID","Country","Rank","Type","exact","path","component","middleware","getDefaultMiddleware","store","configureStore","reducer","weatherReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7d4fd78c.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n  body: \"#fff\",\r\n  fontColor: \"#000\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#080808\",\r\n  fontColor: \"#fff\",\r\n  inputColor: \"#ccc\",\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\tbody {\r\n\t\tbackground-color: ${(props) => props.theme.body};\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.scss\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      <li>\r\n        <Link className={styles.link} to=\"/\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className={styles.link} to=\"/favorite\">\r\n          Favorites\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst SContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => dir};\r\n  max-width: ${({ maxWidth }) => maxWidth};\r\n  justify-content: ${({ justify }) => justify};\r\n  align-items: ${({ alignItems }) => alignItems};\r\n  padding: ${({ padding }) => padding};\r\n  margin: ${({ margin }) => margin};\r\n  height: ${({ height }) => height};\r\n  border: ${({ border }) => border};\r\n  border-bottom: ${({ borderBottom }) => borderBottom};\r\n  border-radius: ${({ radius }) => radius};\r\n  flex-wrap: ${({ wrap }) => wrap};\r\n  overflow: ${({ overflow }) => overflow};\r\n`;\r\n\r\nconst Container = (props) => {\r\n  return <SContainer {...props} />;\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SText = styled.p`\r\n  font-size: ${(p) => p.size};\r\n  color: ${(p) => p.color};\r\n  font-weight: ${(p) => p.weight};\r\n  margin: ${(p) => (p.margin ? p.margin : \"0\")};\r\n`;\r\n\r\nconst Text = ({ children, size, color, weight, margin }) => {\r\n  return (\r\n    <SText size={size} color={color} weight={weight} margin={margin}>\r\n      {children}\r\n    </SText>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Container from \"../common/container/Container\";\r\nimport Text from \"../common/text/Text\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst Header = ({ setTheme }) => {\r\n  return (\r\n    <Container\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      padding=\"0 25px\"\r\n      borderBottom=\"1px solid #9a58b2\"\r\n      margin=\"0 0 30px 0px\"\r\n    >\r\n      <Text color=\"#9a58b2\" size=\"1.5em\" weight=\"500\">\r\n        Weather App\r\n      </Text>\r\n      <Nav />\r\n      <Switch\r\n        onChange={() => setTheme((cur) => !cur)}\r\n        name=\"checkedA\"\r\n        style={{ color: \"#9a58b2\" }}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst SCol = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => flex};\r\n  flex-direction: ${({ dir }) => dir};\r\n  justify-content: ${({ justify }) => justify};\r\n  align-items: ${({ alignItems }) => alignItems};\r\n  padding: ${({ padding }) => padding};\r\n  margin: ${({ margin }) => margin};\r\n  height: ${({ height }) => height};\r\n  width: ${({ width }) => width};\r\n  border: ${(border) => border};\r\n  border-radius: ${({ radius }) => radius};\r\n`;\r\n\r\nconst Col = (props) => {\r\n  return <SCol {...props} />;\r\n};\r\n\r\nexport default Col;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst SRow = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ dir }) => dir};\r\n  justify-content: ${({ justify }) => justify};\r\n  align-items: ${({ alignItems }) => alignItems};\r\n  flex-wrap: ${({ wrap }) => wrap};\r\n  padding: ${({ padding }) => padding};\r\n  margin: ${({ margin }) => margin};\r\n  height: ${({ height }) => height};\r\n  overflow: ${({ overflow }) => overflow};\r\n`;\r\n\r\nconst Row = (props) => {\r\n  return <SRow {...props} />;\r\n};\r\n\r\nexport default Row;\r\n","import moment from \"moment\";\r\n\r\nconst date = {\r\n  isFulldate: (date) => moment(date).format(\"LLL\"),\r\n  isDay: (date) => moment(date).format(\"dddd\"),\r\n};\r\n\r\nexport default date;\r\n","import React from \"react\";\r\nimport Col from \"../../common/col/Col\";\r\nimport Row from \"../../common/row/Row\";\r\nimport Text from \"../../common/text/Text\";\r\nimport date from \"../../../utils/date\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction Forecast({ current }) {\r\n  return (\r\n    <Row\r\n      alignItems=\"center\"\r\n      justify=\"space-around\"\r\n      height=\"70%\"\r\n      wrap=\"wrap\"\r\n      overflow=\"auto\"\r\n      margin=\"25px 0\"\r\n    >\r\n      {current.forecast.length > 0 &&\r\n        current.forecast.map((f) => (\r\n          <Col\r\n            key={uuidv4()}\r\n            dir=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            width=\"250px\"\r\n            radius=\"8px\"\r\n            margin=\"10px\"\r\n            border=\"1px solid #ccc\"\r\n            padding=\"25px\"\r\n          >\r\n            <img\r\n              src={`https://developer.accuweather.com/sites/default/files/${\r\n                f.Day.Icon < 9 ? `0${f.Day.Icon}` : f.Day.Icon\r\n              }-s.png`}\r\n              alt={f.Day.IconPhrase}\r\n            />\r\n            <Text size=\"2em\" margin=\"15px 0\">\r\n              {date.isDay(f.Date)}\r\n            </Text>\r\n            <Text weight=\"500\" size=\"1.2em\">\r\n              {f.Day.IconPhrase}\r\n            </Text>\r\n            <Text weight=\"500\">\r\n              Min: {f.Temperature.Minimum.Value}\r\n              {f.Temperature.Minimum.Unit} Max: {f.Temperature.Maximum.Value}\r\n              {f.Temperature.Maximum.Unit}\r\n            </Text>\r\n          </Col>\r\n        ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default React.memo(Forecast);\r\n","import axios from \"axios\";\r\n\r\nconst http = async (url, data) =>\r\n  await axios({\r\n    method: \"GET\",\r\n    url,\r\n    data,\r\n  });\r\n\r\nexport default http;\r\n","export const API_KEY = \"DvbfNw0h6dTVXujnbVXj4MZr6Eu8stph\";\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport http from \"../../utils/http\";\r\nimport { API_KEY } from \"../../utils/api_key\";\r\n\r\nexport const getLocationApi = createAsyncThunk(\r\n  \"weather/getPlaces\",\r\n  async (value, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await http(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${value}`\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getWeatherApi = createAsyncThunk(\r\n  \"weather/getWeather\",\r\n  async (location, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await http(\r\n        `https://dataservice.accuweather.com/currentconditions/v1/${location.Key}?apikey=${API_KEY}`\r\n      );\r\n      return { weather: data[0], location };\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getForecastApi = createAsyncThunk(\r\n  \"weather/getForecast\",\r\n  async (location, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await http(\r\n        `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.Key}?apikey=${API_KEY}`\r\n      );\r\n      return data.DailyForecasts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getCurrentByGeoLocation = createAsyncThunk(\r\n  \"weather/getByGeo\",\r\n  async ({ lat, lng }, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const { data } = await http(\r\n        `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%2C%20${lng}`\r\n      );\r\n      dispatch(getWeatherApi(data));\r\n      dispatch(getForecastApi(data));\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getLocationApi,\r\n  getWeatherApi,\r\n  getForecastApi,\r\n  getCurrentByGeoLocation,\r\n} from \"./weatherApi\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = {\r\n  places: [],\r\n  current: {\r\n    location: {},\r\n    weather: {},\r\n    forecast: [],\r\n  },\r\n  favorites: [],\r\n  loading: false,\r\n  error: \"\",\r\n};\r\n\r\nexport const weatherSlice = createSlice({\r\n  name: \"weather\",\r\n  initialState,\r\n  reducers: {\r\n    handleFavorite: (state, { payload }) => {\r\n      const exist = state.favorites.some(\r\n        (fav) => fav.location.Key === payload.location.Key\r\n      );\r\n\r\n      if (exist) {\r\n        state.favorites = state.favorites.filter(\r\n          (favorite) => favorite.location.Key !== payload.location.Key\r\n        );\r\n      } else {\r\n        state.favorites.push({\r\n          id: uuidv4(),\r\n          locationName: payload.location.LocalizedName,\r\n          ...payload,\r\n        });\r\n      }\r\n    },\r\n    changeCurrent: (state, { payload }) => {\r\n      state.current = payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getLocationApi.pending]: (state) => {\r\n      state.error = \"\";\r\n      state.loading = true;\r\n    },\r\n    [getLocationApi.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.places = payload;\r\n    },\r\n    [getLocationApi.rejected]: (state, { error }) => {\r\n      state.loading = false;\r\n      state.error = error.message;\r\n    },\r\n    [getWeatherApi.pending]: (state) => {\r\n      state.error = \"\";\r\n      state.loading = true;\r\n    },\r\n    [getWeatherApi.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.current.location = payload.location;\r\n      state.current.weather = payload.weather;\r\n    },\r\n    [getWeatherApi.rejected]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n    [getForecastApi.pending]: (state) => {\r\n      state.error = \"\";\r\n      state.loading = true;\r\n    },\r\n    [getForecastApi.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.current.forecast = payload;\r\n    },\r\n    [getForecastApi.rejected]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n    [getCurrentByGeoLocation.pending]: (state) => {\r\n      state.error = \"\";\r\n      state.loading = true;\r\n    },\r\n    [getCurrentByGeoLocation.fulfilled]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.current.location = payload;\r\n    },\r\n    [getCurrentByGeoLocation.rejected]: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { handleFavorite, changeCurrent } = weatherSlice.actions;\r\n\r\nexport default weatherSlice.reducer;\r\n","import React from \"react\";\r\nimport { BsSun, BsMoon, BsHeartFill } from \"react-icons/bs\";\r\nimport Text from \"../../common/text/Text\";\r\nimport { IconButton } from \"@material-ui/core/\";\r\nimport Row from \"../../common/row/Row\";\r\nimport Col from \"../../common/col/Col\";\r\nimport date from \"../../../utils/date\";\r\nimport { handleFavorite } from \"../../../redux/weather/weatherSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Head = ({ current, favorites }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const existInFavorite = favorites.some(\r\n    (favorite) => favorite.location.Key === current.location.Key\r\n  );\r\n\r\n  const handleClick = () => {\r\n    dispatch(handleFavorite(current));\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      alignItems=\"center\"\r\n      height=\"30%\"\r\n      style={{ borderBottom: \"1px solid #ccc\" }}\r\n    >\r\n      <Col flex={\"5%\"} margin=\"0 15px\">\r\n        {current.weather.IsDayTime ? (\r\n          <BsSun size=\"4em\" color=\"orange\" />\r\n        ) : (\r\n          <BsMoon size=\"4em\" color=\"#91A3B0\" />\r\n        )}\r\n      </Col>\r\n      <Col flex={\"70%\"} dir=\"column\">\r\n        <Text size=\".8em\" margin=\"10px 0\">\r\n          {date.isFulldate(current.weather.LocalObservationDateTime)}\r\n        </Text>\r\n        <Text size=\"2em\" color=\"#9a58b2\" weight=\"700\">\r\n          {current.location.LocalizedName}\r\n        </Text>\r\n        <Text>{current.weather.WeatherText}</Text>\r\n        <Text>\r\n          {current.weather.Temperature?.Metric.Value}\r\n          {current.weather.Temperature?.Metric.Unit}{\" \"}\r\n          {current.weather.Temperature?.Imperial.Value}\r\n          {current.weather.Temperature?.Imperial.Unit}\r\n        </Text>\r\n      </Col>\r\n      <Col flex=\"10%\" justify=\"flex-end\">\r\n        <IconButton onClick={handleClick}>\r\n          <BsHeartFill\r\n            color={existInFavorite ? \"#ff0005\" : \"#ccc\"}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </IconButton>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Head;\r\n\r\n// !favorites.some(\r\n//   (fav) => fav.location.Key === current.location.Key\r\n// )\r\n//   ? \"#ccc\"\r\n//   : \"red\"\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getLocationApi,\r\n  getWeatherApi,\r\n  getForecastApi,\r\n} from \"../../../redux/weather/weatherApi\";\r\n\r\nconst useSearch = () => {\r\n  const { places, loading } = useSelector((state) => state.weather);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = async (e) => {\r\n    dispatch(getLocationApi(e.target.value));\r\n  };\r\n\r\n  const handleSelected = (place) => {\r\n    dispatch(getWeatherApi(place));\r\n    dispatch(getForecastApi(place));\r\n  };\r\n\r\n  return { places, loading, handleChange, handleSelected };\r\n};\r\n\r\nexport default useSearch;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useSearch from \"./useSearch\";\r\nimport { withTheme } from \"styled-components\";\r\n\r\nconst Search = ({ theme }) => {\r\n  const { places, loading, handleChange, handleSelected } = useSearch();\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={places || []}\r\n      getOptionLabel={(option) => option.LocalizedName}\r\n      getOptionSelected={(option, value) => option.Version === value.Version}\r\n      onChange={(event, place) => handleSelected(place)}\r\n      style={{\r\n        maxWidth: 500,\r\n        margin: \"10px auto\",\r\n        padding: \"25px \",\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"search\"\r\n          variant=\"outlined\"\r\n          onChange={handleChange}\r\n          style={{\r\n            background: theme.inputColor,\r\n          }}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withTheme(Search);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Loader type=\"BallTriangle\" color=\"#9a58b2\" height={100} width={100} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Forecast from \"./board/Forecast\";\r\nimport Head from \"./board/Head\";\r\nimport Container from \"../common/container/Container\";\r\n\r\nimport Search from \"./search/Search\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { BiSad } from \"react-icons/bi\";\r\nimport Spinner from \"../common/Spinner/Spinner\";\r\n\r\nconst Main = () => {\r\n  const { current, loading, error, favorites } = useSelector(\r\n    (state) => state.weather\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <Container\r\n        dir=\"column\"\r\n        padding=\"25px\"\r\n        margin=\"0 auto\"\r\n        height=\"60vh\"\r\n        maxWidth=\"80%\"\r\n        border=\"1px solid #9a58b2\"\r\n        radius=\"8px\"\r\n        justify=\"space-around\"\r\n        alignItems=\"space-around\"\r\n      >\r\n        {loading ? (\r\n          <span style={{ alignSelf: \"center\" }}>\r\n            <Spinner />\r\n          </span>\r\n        ) : Object.keys(current.location).length > 0 &&\r\n          Object.keys(current.weather).length > 0 &&\r\n          current.forecast.length > 0 ? (\r\n          <>\r\n            <Head current={current} favorites={favorites} />\r\n            <Forecast current={current} />\r\n          </>\r\n        ) : (\r\n          error && (\r\n            <BiSad size=\"4em\" color=\"#9a58b2\" style={{ alignSelf: \"center\" }} />\r\n          )\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Container from \"../common/container/Container\";\r\nimport Col from \"../common/col/Col\";\r\nimport Text from \"../common/text/Text\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeCurrent } from \"../../redux/weather/weatherSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Favorites = () => {\r\n  const { favorites } = useSelector((state) => state.weather);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClick = (favorite) => {\r\n    const { location, weather, forecast } = favorite;\r\n    dispatch(changeCurrent({ location, weather, forecast }));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    favorites.length > 0 && (\r\n      <Container\r\n        dir=\"flex\"\r\n        padding=\"25px\"\r\n        margin=\"auto\"\r\n        height=\"80vh\"\r\n        maxWidth=\"80%\"\r\n        border=\"1px solid #9a58b2\"\r\n        radius=\"8px\"\r\n        wrap={\"wrap\"}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        overflow=\"auto\"\r\n      >\r\n        {favorites.map((favorite) => (\r\n          <Col\r\n            key={favorite.id}\r\n            dir=\"column\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            width=\"250px\"\r\n            height=\"300px\"\r\n            radius=\"8px\"\r\n            margin=\"10px\"\r\n            border=\"1px solid #ccc\"\r\n            padding=\"25px\"\r\n            onClick={() => handleClick(favorite)}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Text size=\"2em\" margin=\"15px 0\">\r\n              {favorite.locationName}\r\n            </Text>\r\n            <img\r\n              src={`https://developer.accuweather.com/sites/default/files/${\r\n                favorite.weather.WeatherIcon < 9\r\n                  ? `0${favorite.weather.WeatherIcon}`\r\n                  : favorite.weather.WeatherIcon\r\n              }-s.png`}\r\n              alt={favorite.weather.WeatherIcon}\r\n            />\r\n            <Text weight=\"500\" size=\"1.2em\">\r\n              {favorite.weather.WeatherText}\r\n            </Text>\r\n            <Text weight=\"500\">\r\n              {favorite.weather.Temperature?.Metric.Value}\r\n              {favorite.weather.Temperature?.Metric.Unit}\r\n            </Text>\r\n          </Col>\r\n        ))}\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: \"30%\",\r\n    margin: \"0 auto\",\r\n    position: \"absolute\",\r\n    bottom: \"50px\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n  },\r\n}));\r\n\r\nexport default function SimpleAlerts({ error }) {\r\n  const classes = useStyles();\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timeout = (fn) =>\r\n      setTimeout(() => {\r\n        fn();\r\n      }, 2500);\r\n\r\n    if (error) {\r\n      setVisible(true);\r\n\r\n      timeout(() => {\r\n        setVisible(false);\r\n      });\r\n    } else {\r\n      return setVisible(false);\r\n    }\r\n\r\n    return clearTimeout(timeout);\r\n  }, [error]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        opacity: visible ? \"1\" : \"0\",\r\n        transition: \"0.3s ease\",\r\n        transform: visible ? \"translateY(0)\" : \"translateY(100px)\",\r\n      }}\r\n    >\r\n      <Alert severity=\"error\">{error}</Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./styles/theme\";\n// components\nimport Header from \"./components/header/Header\";\nimport Main from \"./components/main/Main\";\nimport Favorites from \"./components/favorites/Favorites\";\nimport Alert from \"./components/common/alert/Alert\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getCurrentByGeoLocation,\n  getForecastApi,\n  getWeatherApi,\n} from \"./redux/weather/weatherApi\";\n\nconst StyledApp = styled.div`\n  color: ${({ theme }) => theme.fontColor};\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState(false);\n  const { error } = useSelector((state) => state.weather);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const lat = pos.coords.latitude;\n        const lng = pos.coords.longitude;\n        dispatch(getCurrentByGeoLocation({ lat, lng }));\n      },\n      (error) => {\n        const tlvDefaultLocation = {\n          AdministrativeArea: { ID: \"TA\", LocalizedName: \"Tel Aviv\" },\n          Country: { ID: \"IL\", LocalizedName: \"Israel\" },\n          Key: \"215854\",\n          LocalizedName: \"Tel Aviv\",\n          Rank: 31,\n          Type: \"City\",\n          Version: 1,\n        };\n        dispatch(getWeatherApi(tlvDefaultLocation));\n        dispatch(getForecastApi(tlvDefaultLocation));\n      }\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ThemeProvider theme={!theme ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <StyledApp>\n        <Router>\n          <Header setTheme={setTheme} />\n          <Switch>\n            <Route exact path=\"/favorite\" component={Favorites} />\n            <Route exact path=\"*\" component={Main} />\n          </Switch>\n          <Alert error={error} />\n        </Router>\n      </StyledApp>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport weatherReducer from \"./weather/weatherSlice\";\n\nconst middleware = [...getDefaultMiddleware()];\n\nexport const store = configureStore({\n  reducer: {\n    weather: weatherReducer,\n    middleware,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"header_ul__BMjF3\",\"link\":\"header_link__1ZMti\"};"],"sourceRoot":""}